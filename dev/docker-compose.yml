version: '3'
services:
  ansible:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        ANSIBLE_VERSION: ${ANSIBLE_VERSION}
        PYTHON_VERSION: ${PYTHON_VERSION}
    command: /bin/sleep 1d
    environment:
      COMPOSE_PROJECT_NAME: dev
      CONJUR_ACCOUNT: ${CONJUR_ACCOUNT}
      CONJUR_APPLIANCE_URL: ${CONJUR_APPLIANCE_URL}
      CONJUR_AUTHN_API_KEY: ${ANSIBLE_API_KEY}
      CONJUR_AUTHN_LOGIN: host/ansible/ansible-master
      IS_CLOUD: false
      # NOTE: Explicitly setting the ANSIBLE_CONFIG envvar avoids Ansible ignoring
      # the configuration because it is in a world-writable working directory,
      # see https://docs.ansible.com/ansible/latest/reference_appendices/config.html#avoiding-security-risks-with-ansible-cfg-in-the-current-directory.
      ANSIBLE_CONFIG: /cyberark/dev/ansible.cfg
      ANSIBLE_INVENTORY: /cyberark/dev/inventory.tmp
      ANSIBLE_ROLES_PATH: /roles
    networks:
      - "${DOCKER_NETWORK}"
    volumes:
      - .:/cyberark/dev
      - /cyberark/dev/conjur-intro/
      - ../roles/conjur_host_identity:/roles/cyberark.conjur.conjur_host_identity/
      - ../roles/conjur_host_identity/tests:/cyberark/tests/conjur_host_identity/
      - ../plugins:/root/.ansible/plugins
      - ../tests/conjur_variable:/cyberark/tests/conjur_variable
      - /var/run/docker.sock:/var/run/docker.sock

  pg:
    image: postgres:15
    environment:
      # To avoid the following error:
      #
      #   Error: Database is uninitialized and superuser password is not
      #   specified.  You must specify POSTGRES_PASSWORD for the superuser. Use
      #   "-e POSTGRES_PASSWORD=password" to set it in "docker run".
      #
      #   You may also use POSTGRES_HOST_AUTH_METHOD=trust to allow all
      #   connections without a password. This is *not* recommended. See
      #   PostgreSQL documentation about "trust"
      POSTGRES_HOST_AUTH_METHOD: trust

  conjur:
    image: cyberark/conjur
    command: server -a cucumber -p 3000
    environment:
      CONJUR_APPLIANCE_URL: http://localhost:3000
      DATABASE_URL: postgres://postgres@pg/postgres
      CONJUR_DATA_KEY: "W0BuL8iTr/7QvtjIluJbrb5LDAnmXzmcpxkqihO3dXA="
    depends_on:
      - pg
    networks:
      - default
    links:
      - pg

  conjur_cli:
    image: cyberark/conjur-cli:8
    entrypoint: []
    command: sleep infinity
    environment:
      CONJUR_APPLIANCE_URL: http://conjur:3000
      CONJUR_ACCOUNT: cucumber
      CONJUR_AUTHN_LOGIN: admin
      CONJUR_AUTHN_API_KEY: ${ADMIN_API_KEY}
    volumes:
      - ./policy:/policy
    networks:
      - default
    links:
      - conjur

  test_app_ubuntu:
    build: ./test_app_ubuntu
    entrypoint: sleep
    command: infinity
    networks:
      - "${DOCKER_NETWORK}"

  test_app_centos:
    build: ./test_app_centos
    entrypoint: sleep
    command: infinity
    networks:
      - "${DOCKER_NETWORK}"

  conjur-proxy-nginx:
    build:
      context: .
      dockerfile: Dockerfile_nginx
    entrypoint: nginx-debug -g 'daemon off;'
    environment:
        TERM: xterm
    depends_on:
      - conjur

networks:
  dap_net:
    name: dap_net
    external: true
